Ejercicio 1

Hace match con todos menos con el ultimo

555658
56-58-11
56.58.11
56.78-98
65 09 87
76y87r98

(\d{2,2}[^\w]?){3}


Ejercicio 2 - LOGS

Paste Bin con Logs para probar expresiones regulares  https://pastebin.com/ptDsJ6tR

[LOG ENTRY] [ERROR] The system is unstable
[LOG ENTRY] [WARN] The system may be down
[LOG ENTRY] [LOG] Everything is OK
[LOG ENTRY] [LOG] [user:@beco] Logged in
[LOG ENTRY] [LOG] [user:@beco] Clicked here
[LOG ENTRY] [LOG] [user:@celismx] Rated the app
[LOG ENTRY] [LOG] [user:@beco] Logged out

Buscamos todos los "LOGS" de tipo "ERROR" --- ^\[LOG.*\[ERROR\].*$
Buscamos todos los "LOGS" de tipo "ERROR" --- ^\[LOG.*\[WARN\].*$
Buscamos todos los "LOGS" de tipo "ERROR" --- ^\[LOG.*\[ERROR\].*$
Encontrar los logs de tipo "LOG" cuyo usuario sea "celismx" --- ^\[LOG.*\[LOG\].*user:@celismx\].*$
Encontrar los tipos logs de tipo [LOG] de cualquier usuario --- ^\[LOG.*\[LOG\].*user:@\w+?\].*$

Ejercicio 3 - Telefonos (Validacion de diferente tipos de telefonos)

555658
56-58-11
56.58.11
56.78-98
65 09 87
65-09-87#123
76y87r98
552560p123
552560e123
+521565811

Resultado correcto --- ^\+?\d{2,3}[^\da-z]?\d{2,3}[^\da-z]?\d{2,3}[#pe]?\d*$

Explicacion de la linea

^\+?\ -- Puede empezar o no por el simbolo '+' . Interrogacion es 0 o 1
d{2,3}[^\da-z]?  -- Agrupaciones de 2 o 3 digitos que pueden llevar o no (?) algo que no sea un digito o una letra
                    de la a a la z en minusculas. El simbolo ^ indica negacion
[#pe]?\d*$      --- Por ultimo para que coja los casos del '#' , 'p' y 'e' le decimos que puede llevarlos o no pero que
                    despues de estos, si existen, iran numeros

Ejercicio 4 - Validacion de emails

url: https://www.instagram.com/p/BXB4zsUlW5Z/?taken-by=beco.mx
url: https://instagram.com/p/blablablah
url: https://itam.mx/test
https://instagram.com/p/blablablah
https://sub.dominio.de.alguien.com/archivo.html
 
Vayamos viendo como construimos la expresion regular

Primera parte cogemos todo incluida la extension --> https?:\//[\w\-\.]+
Ejemplo  https://sub.dominio.de.alguien.com

Segunda parte queremos especificar las extensiones (.com,.es,.mx ...)
Si queremos que solo nos coja los '.com' --> https?:\//[\w\-\.]+\.\w{2,5}[com]
Si queremos que nos coja todas las extensiones con un numero minimo de 2 caracter y un maximo de 3
De esta manera nos coge todas nuestras urls ya que las extensiones que tenemos son "mx" y "com"
--> https?:\//[\w\-\.]+\.\w{2,3} 

Tercera parte si tenemos algo despues de ".mx" o ".com" hay que especificarle

https://sub.dominio.de.alguien.com/archivo.html
--> https?:\//[\w\-\.]+\.\w{2,3}\/.*

Ejercicio 5 - Ejemplos para la validacion de emails con expresiones regulares (regex)

esto.es_un.mail@mail.com
esto.es_un.mail+complejo@mail.com
dominio.com
rodrigo.jimenez@yahoo.com.mx
ruben@starbucks.com
esto_no$es_email@dominio.com
no_se_de_internet3@hotmail.com

Primera parte

Para sacar el dominio utilizaremos --> @[\w\.\-]{3,}\.\w{2,5}
Ejemplo de 'dominios' : @yahoo.com.mx , @starbucks.com , @dominio.com , @hotmail.com

Para sacar el usuario --> [\w._]{5,30}\+?[\w]{0,10}@

Segunda parte

Juntamos la parte del email y del usuario y tenemos un regex para email
[\w\._]{5,30}\+?[\w]{0,10}@[\w\.\-]{3,}\.\w{2,5}$


Ejercios sobre localizaciones


Aqui estamos diciendo que habra o no un signo (-) y despues tendremos los grados que podran ir entre
0 y 180 (es decir, entre 0 y 180 grados). Luego obligatoriamente habra un (.) y mas tarde tendremos 
una precision entre 1 y 6 digitos. Seguidamente una (,)

-99.205646,19.429707,2275.10
-99 12' 34.08"W, 19 34' 56.98"N
-34 54' 32.00"E, -3 21' 67.00"S

^\-?\d{1,3}\.\d{1,6},\s?\-?\d{1,3}\.\d{1,6},.*$
^\-?\d{1,3}\s\d{1,2}' \d{1,2}\.\d{2,2}"[WE],\s?\-?\d{1,3}\s\d{1,2}' \d{1,2}\.\d{2,2}"[SN]

Otra forma de poner localizaciones seria con "http://map.what3words.com"

Esta pagina a traves de su api expresion una localizacion con tres palabras distintas
Ejemplos

gravel.notes.handbag
reaming.embeds.rats

^[a-z]{3,}\.[a-z]{3,}\.[a-z]+













